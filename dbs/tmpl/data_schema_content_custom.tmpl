
func (s *{{{.TableNamePascal}}}) SelfSaveBy{{{.TableFieldNamePascal}}}(value interface{}, save interface{}, way ...*hey.Way) (int64, error) {
	field := s.T().{{{.TableFieldNamePascal}}}
	filter := s.F().Equal(field, value)
	tmp, err := s.SelfGetOne(func(get *hey.Get) { get.Where(filter) }, way...)
	if err != nil {
		return 0, err
	}
	if tmp == nil {
		return s.Insert(save, way...)
	}
	return s.Update(filter, model.TableUpdate(s, save, field), way...)
}

func (s *{{{.TableNamePascal}}}) SelfRemoveBy{{{.TableFieldNamePascal}}}(values interface{}, way ...*hey.Way) (int64, error) {
	return s.Delete(s.F().In(s.T().{{{.TableFieldNamePascal}}}, values), way...)
}

func (s *{{{.TableNamePascal}}}) SelfGetAllBy{{{.TableFieldNamePascal}}}(values interface{}, way ...*hey.Way) ([]*model.{{{.TableNamePascal}}}, error) {
	return s.SelfGetAll(func(get *hey.Get) { get.Where(s.F().In(s.T().{{{.TableFieldNamePascal}}}, values)) }, way...)
}

func (s *{{{.TableNamePascal}}}) SelfGetOneBy{{{.TableFieldNamePascal}}}(value interface{}, way ...*hey.Way) (*model.{{{.TableNamePascal}}}, error) {
	return s.SelfGetOne(func(get *hey.Get) { get.Where(s.F().Equal(s.T().{{{.TableFieldNamePascal}}}, value)) }, way...)
}

func (s *{{{.TableNamePascal}}}) SelfMustSaveBy{{{.TableFieldNamePascal}}}(value interface{}, save interface{}, way ...*hey.Way) error {
	rowsAffected, err := s.SelfSaveBy{{{.TableFieldNamePascal}}}(value, save, way...)
	if err != nil {
		return err
	}
	if rowsAffected <= 0 {
		return model.ErrNoAffectedRows
	}
	return nil
}

func (s *{{{.TableNamePascal}}}) SelfMustRemoveBy{{{.TableFieldNamePascal}}}(values interface{}, way ...*hey.Way) error {
	rowsAffected, err := s.SelfRemoveBy{{{.TableFieldNamePascal}}}(values, way...)
	if err != nil {
		return err
	}
	if rowsAffected <= 0 {
		return model.ErrNoAffectedRows
	}
	return nil
}

func (s *{{{.TableNamePascal}}}) SelfMustGetAllBy{{{.TableFieldNamePascal}}}(values interface{}, way ...*hey.Way) ([]*model.{{{.TableNamePascal}}}, error) {
	return s.SelfMustGetAll(func(get *hey.Get) { get.Where(s.F().In(s.T().{{{.TableFieldNamePascal}}}, values)) }, way...)
}

func (s *{{{.TableNamePascal}}}) SelfMustGetOneBy{{{.TableFieldNamePascal}}}(value interface{}, way ...*hey.Way) (*model.{{{.TableNamePascal}}}, error) {
	return s.SelfMustGetOne(func(get *hey.Get) { get.Where(s.F().Equal(s.T().{{{.TableFieldNamePascal}}}, value)) }, way...)
}
